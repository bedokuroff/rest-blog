imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@RestBlogBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8

    orm:
        default_entity_manager: default
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
#            default:
#                naming_strategy: doctrine.orm.naming_strategy.underscore
#                auto_mapping: true
#                query_cache_driver:
#                    type: redis
#                    host: "%redis_host%"
#                    port: "%redis_port%"
#                result_cache_driver:
#                    type: redis
#                    host: "%redis_host%"
#                    port: "%redis_port%"
#                metadata_cache_driver:
#                    type: redis
#                    host: "%redis_host%"
#                    port: "%redis_port%"
            cached:
                naming_strategy: doctrine.orm.naming_strategy.underscore
                auto_mapping: true
                query_cache_driver:
                    type: redis
                    host: "%redis_host%"
                    port: "%redis_port%"
                result_cache_driver:
                    type: redis
                    host: "%redis_host%"
                    port: "%redis_port%"
                metadata_cache_driver:
                    type: redis
                    host: "%redis_host%"
                    port: "%redis_port%"
                second_level_cache:
                    region_cache_driver:
                        type: redis
                        host: "%redis_host%"
                        port: "%redis_port%"
                    region_lock_lifetime: 60
                    log_enabled: true
                    region_lifetime: 60
                    enabled: true
                    regions:
                        region_post:
                            lifetime: 60
                            cache_driver:
                                type: redis
                                host: "%redis_host%"
                                port: "%redis_port%"
# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:
        type: file
        path: '%kernel.root_dir%/spool'

old_sound_rabbit_mq:
    connections:
        default:
            host:     "%rabbitmq_host%"
            port:     "%rabbitmq_port%"
            user:     "%rabbitmq_user%"
            password: "%rabbitmq_password%"
            vhost:    "%rabbitmq_vhost%"
            lazy:     true
            connection_timeout: 3
            read_write_timeout: 3
            keepalive: false
            heartbeat: 0
    producers:
        rest_blog.amqp.send_mail:
            connection:       default
            exchange_options: {name: 'send-mail', type: direct}
    consumers:
        rest_blog.amqp.send_mail:
            connection:       default
            exchange_options: {name: 'send-mail', type: direct}
            queue_options:    {name: 'send-mail'}
            callback:         rest_blog.amqp.send_mail_consumer

monolog:
    handlers:
        post_deletion:
            type: stream
            path: "%kernel.logs_dir%/post-deletion.log"
            channels: [post_deletion]

nelmio_api_doc:
    name: 'Rest Blog API'
    sandbox:
        enabled: false
